{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","yolkjs/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","demo.js","index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","updateDom","dom","preProps","nextProps","name","slice","removeEventListener","toLowerCase","addEventListener","deadline","queue","getTime","performance","now","schedule","task","postTask","reconcile","WIP","performUnitOfWork","bind","wipRoot","deletions","commitWorker","child","effects","wipFiber","effect","currentRoot","effectIndex","commitRoot","update","fiber","pending","Promise","resolve","then","flush","MessageChannel","port1","port2","onmessage","postMessage","setTimeout","shouldYield","next","pop","domParentFiber","parent","domParent","effectTag","appendChild","commitDeletion","removeChild","base","props","sibling","type","Function","hookIndex","hooks","children","reconcileChildren","updateFunctionComponent","vdom","document","createTextNode","createElement","createDom","elements","updateHostComponent","nextFiber","oldInputs","index","oldFiber","preSibling","allElement","n","element","newFiber","sameType","__source","map","nodeValue","render","container","useState","init","hook","oldHook","state","action","shift","scheduleWork","useEffect","inputs","current","create","hasChanged","Error","some","processEffect","startTranstion","_slicedToArray","_arr","_n","_d","_e","undefined","_s","_i","done","err","many","j","Math","floor","random","shuffle","quickSort","pivot","leftArr","rightArr","ReactDOM","React","count","setCount","console","warn","demo","setDemo","log","querySelector","innerHTML","id","title","className","href","onClick","c1","c2","c3","addTwice","getElementById"],"mappings":"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","file":"static/js/main.683f470c.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","\r\n/**\r\n * 创建虚拟dom的方法\r\n * @param {string} type 元素类型\r\n * @param {any} props jsx传递的属性\r\n * @param  {...any} children 子元素 \r\n */\r\nfunction createElement(type, props, ...children) {\r\n  // console.warn(children);\r\n  if (props) {\r\n    delete props.__source;\r\n  }\r\n  return {\r\n    type,\r\n    props: {\r\n      ...props,\r\n      children: children.map(child =>\r\n        typeof child === 'object' ? child : createTextElement(child)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction createTextElement(text) {\r\n  return {\r\n    type: 'TEXT',\r\n    props: {\r\n      nodeValue: text,\r\n      children: [],\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 通过虚拟 dom 新建 dom 元素\r\n * @param {*} vdom 虚拟 dom\r\n */\r\nfunction createDom(vdom) {\r\n  const dom = vdom.type === \"TEXT\"\r\n    ? document.createTextNode(\"\")\r\n    : document.createElement(vdom.type)\r\n  updateDom(dom, {}, vdom.props)\r\n  // Object.keys(vdom.props).forEach(name => {\r\n  //   if (name !== \"children\") {\r\n  //     // @todo: 属性判断，事件处理\r\n  //     dom[name] = vdom.props[name]\r\n  //   }\r\n  // })\r\n  return dom\r\n}\r\n\r\nfunction updateDom(dom, preProps, nextProps) {\r\n  /**\r\n   * 1. 规避 children 属性\r\n   * 2. 老得存在，取消\r\n   * 3. 新的存在，新增， \r\n   */\r\n\r\n  //  @todo 兼容性问题  \r\n\r\n  const filterPreProps = name => {\r\n    if (name.slice(0, 2) !== 'on') {\r\n      return false\r\n    }\r\n    if (!(name in nextProps)) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  \r\n  Object.keys(preProps)\r\n    .filter(name => name !== 'children')\r\n    .filter(filterPreProps)\r\n    .forEach(name => {\r\n      if (name.slice(0, 2) === 'on') {\r\n        // onclick => chick\r\n        dom.removeEventListener(name.slice(2).toLowerCase(), preProps[name], false)\r\n      } else {\r\n        dom[name] = ''\r\n      }\r\n    })\r\n\r\n  Object.keys(nextProps)\r\n    .filter(name => name !== 'children')\r\n    .forEach(name => {\r\n      if (name.slice(0, 2) === 'on') {\r\n        // onclick => chick\r\n        dom.addEventListener(name.slice(2).toLowerCase(), nextProps[name], false)\r\n      } else {\r\n        dom[name] = nextProps[name]\r\n      }\r\n    })\r\n}\r\n\r\nlet deadline = 0\r\n// for test\r\nconst threshold = 5\r\n// const threshold = 1\r\nconst queue = []\r\n\r\n\r\nconst getTime = () => performance.now()\r\n\r\nconst schedule = (task) => {\r\n  // debugger\r\n  queue.push(task) && postTask()\r\n}\r\n\r\nconst reconcile = (WIP) => {\r\n  // debugger\r\n  // workLoop(WIP)\r\n  // nextUnitOfWork = WIP\r\n  // 有下一个任务，且当前帧还没有结束\r\n  while (WIP) { // 方便调试 去掉判断当前帧是否没有结束\r\n    WIP = performUnitOfWork(WIP)\r\n  }\r\n  if (WIP) return reconcile.bind(null, WIP)\r\n  if (!WIP && wipRoot) {\r\n    // 没有任务了，并且根节点还在\r\n    commitRoot()\r\n  }\r\n}\r\n\r\nconst update = (fiber) => {\r\n  if (fiber) {\r\n    // fiber.lane = LANE.UPDATE | LANE.DIRTY\r\n    schedule(() => {\r\n      wipFiber = fiber\r\n      return reconcile(fiber)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nconst task = (pending) => {\r\n  if (!pending && typeof Promise !== 'undefined') {\r\n    // TODO: queueMicrotask\r\n    return () => Promise.resolve().then(flush)\r\n  }\r\n  if (typeof MessageChannel !== 'undefined') {\r\n    const { port1, port2 } = new MessageChannel()\r\n    //  启动空闲时间渲染\r\n    port1.onmessage = flush\r\n    return () => port2.postMessage(null)\r\n  }\r\n  return () => setTimeout(flush)\r\n}\r\n\r\nlet postTask = task(false)\r\n\r\nconst shouldYield = () => {\r\n  const pending = getTime() >= deadline\r\n  postTask = task(pending)\r\n  return pending\r\n}\r\n\r\nconst flush = () => {\r\n  let task, next\r\n  deadline = getTime() + threshold // TODO: heuristic algorithm\r\n  // task 执行可以返回下一个 loop\r\n  while ((task = queue.pop()) && !shouldYield()) {\r\n    ;(next = task()) && queue.push(next) && schedule(next)\r\n  }\r\n}\r\n\r\n// const updateQueue = []\r\n\r\nfunction render(vdom, container) {\r\n  wipRoot = {\r\n    dom: container,\r\n    props: {\r\n      children: [vdom],\r\n    },\r\n    base: currentRoot, // 分身\r\n  }\r\n  deletions = []\r\n\r\n  update(wipRoot)\r\n}\r\n\r\nfunction scheduleWork(wipRoot) {\r\n  deletions = []\r\n  // postTask() //开始干活\r\n  update(wipRoot)\r\n}\r\n\r\n// function performWork(deadline) {\r\n//   workLoop(deadline)\r\n//   if (nextUnitOfWork || updateQueue.length > 0) {\r\n//     postTask() //继续干\r\n//   }\r\n// }\r\n\r\n// function createWorkInProgress(queue) {\r\n//   return queue.shift()\r\n// }\r\n\r\nfunction commitEffects (effects) {\r\n  Object.keys(effects).forEach(key => {\r\n    let effect = effects[key]\r\n    effect()\r\n  })\r\n}\r\n\r\nfunction commitRoot() {\r\n  deletions.forEach(commitWorker)\r\n  commitWorker(wipRoot.child)\r\n\r\n  commitEffects(wipFiber.effects)\r\n\r\n  wipFiber.effects = []\r\n  currentRoot = wipRoot\r\n  wipRoot = null\r\n  // nextUnitOfWork = null\r\n  effectIndex = 0\r\n}\r\n\r\nfunction commitWorker(fiber) {\r\n  if (!fiber) {\r\n    return\r\n  }\r\n  // const domParent = fiber.parent.dom\r\n  // domParent.appendChild(fiber.dom)\r\n  let domParentFiber = fiber.parent\r\n  while (!domParentFiber.dom) {\r\n    domParentFiber = domParentFiber.parent\r\n  }\r\n  const domParent = domParentFiber.dom\r\n  if (fiber.effectTag === 'PLACEMENT' && fiber.dom !== null) {\r\n    domParent.appendChild(fiber.dom)\r\n  } else if (fiber.effectTag === 'DELETION') {\r\n    commitDeletion(fiber, domParent)\r\n    // domParent.removeChild(fiber.dom)\r\n  } else if (fiber.effectTag === 'UPDATE' && fiber.dom !== null) {\r\n    // 更新dom\r\n    updateDom(fiber.dom, fiber.base.props, fiber.props)\r\n  }\r\n  commitWorker(fiber.child)\r\n  commitWorker(fiber.sibling)\r\n}\r\n\r\nfunction commitDeletion(fiber, domParent) {\r\n  if (fiber.dom) {\r\n    domParent.removeChild(fiber.dom)\r\n  } else {\r\n    commitDeletion(fiber.child, domParent)\r\n  }\r\n}\r\n\r\n// 下一个单元任务\r\n// render 函数会初始化第一个任务\r\n// let nextUnitOfWork = null\r\nlet wipRoot = null\r\nlet currentRoot = null\r\nlet deletions = null\r\n\r\nfunction performUnitOfWork(fiber) {\r\n  const isFunctionComponent = fiber.type instanceof Function\r\n  // console.log('iisFunctionComponents', isFunctionComponent, fiber.type, fiber)\r\n  if (isFunctionComponent) {\r\n    updateFunctionComponent(fiber)\r\n  } else {\r\n    // dom\r\n    updateHostComponent(fiber)\r\n  }\r\n  // 找下一个任务\r\n  // 先找子元素\r\n  if (fiber.child) {\r\n    return fiber.child\r\n  }\r\n  let nextFiber = fiber\r\n  // 没有子元素，就找兄弟元素\r\n  while (nextFiber) {\r\n    if (nextFiber.sibling) {\r\n      return nextFiber.sibling\r\n    }\r\n    // 没有兄弟元素，找父元素\r\n    nextFiber = nextFiber.parent\r\n  }\r\n}\r\n\r\nlet wipFiber = null\r\nlet hookIndex = null\r\nlet effectIndex = 0\r\nfunction useState(init) {\r\n  const oldHook = wipFiber.base && wipFiber.base.hooks[hookIndex]\r\n  let hook\r\n  if (oldHook) {\r\n    hook = oldHook\r\n  } else {\r\n    hook = {\r\n      state: oldHook ? oldHook.state : init,\r\n      queue: []\r\n    }\r\n  }\r\n  const actions = oldHook ? oldHook.queue : []\r\n  actions.forEach(action => {\r\n    hook.state = action\r\n  })\r\n  hook.queue.shift()\r\n  const setState = action => {\r\n    // hook.queue.length = 0\r\n    hook.queue.push(action)\r\n    wipRoot = {\r\n      dom: currentRoot.dom,\r\n      props: currentRoot.props,\r\n      base: currentRoot,\r\n    }\r\n    deletions = []\r\n    scheduleWork(wipRoot)\r\n  }\r\n  wipFiber.hooks.push(hook)\r\n  hookIndex++\r\n  return [hook.state, setState]\r\n}\r\n\r\nlet oldInputs = []\r\nfunction processEffect (create, inputs, oldFiber) {\r\n  return function () {\r\n    const current = wipFiber\r\n    if (current) {\r\n      let hasChanged\r\n      if (inputs) {\r\n        if (Array.isArray(inputs)) {\r\n          if (inputs.length) {\r\n            hasChanged = oldInputs.some((value, i) => inputs[i] !== value)\r\n          }\r\n          if (!oldFiber) {\r\n            hasChanged = true\r\n          }\r\n        } else {\r\n          throw new Error(\"the dep must be a Array\")\r\n        }\r\n      } else {\r\n        hasChanged = true\r\n      }\r\n      if (hasChanged) {\r\n        create()\r\n      }\r\n      oldInputs = inputs\r\n    }\r\n  }\r\n}\r\n\r\nfunction useEffect(effect, inputs) {\r\n  const current = wipFiber\r\n  // const cursor = hookIndex\r\n  if (current) {\r\n    let key = '$' + effectIndex\r\n    const oldFiber = wipFiber.base\r\n    current.effects[key] = processEffect(effect, inputs, oldFiber)\r\n    effectIndex++\r\n  }\r\n}\r\n\r\nfunction updateFunctionComponent(fiber) {\r\n  wipFiber = fiber\r\n  hookIndex = 0\r\n  wipFiber.hooks = []\r\n  wipFiber.effects = wipFiber.base ? wipFiber.base.effects : []\r\n  const children = [fiber.type(fiber.props)]\r\n  reconcileChildren(fiber, children)\r\n}\r\n\r\nfunction updateHostComponent(fiber) {\r\n  // 获取下一个任务\r\n  // 根据当前任务获取下一个任务\r\n  if (!fiber.dom) {\r\n    // 不是入口\r\n    fiber.dom = createDom(fiber)\r\n  }\r\n\r\n  // // 真实的 dom 操作\r\n  // if (fiber.parent) {\r\n  //   fiber.parent.dom.appendChild(fiber.dom)\r\n  // }\r\n\r\n  const elements = fiber.props.children\r\n\r\n  reconcileChildren(fiber, elements)\r\n\r\n}\r\n\r\nfunction reconcileChildren(wipFiber, elements) {\r\n  // 构建成 fiber\r\n  let index = 0\r\n  let oldFiber = wipFiber.base && wipFiber.base.child\r\n  let preSibling = null\r\n  const allElement = []\r\n  for (let n of elements) {\r\n    if (Array.isArray(n)) {\r\n      allElement.push(...n)\r\n    } else {\r\n      allElement.push(n)\r\n    }\r\n  }\r\n  while (index < allElement.length) {\r\n    // while (index < elements.length) {\r\n    let element = allElement[index]\r\n    let newFiber = null\r\n    // 对比 oldfiber 的状态和当前 element\r\n    // 先比较类型，\r\n    const sameType = oldFiber && element && oldFiber.type === element.type\r\n    if (sameType) {\r\n      // 复用节点，更新\r\n      newFiber = {\r\n        type: oldFiber.type,\r\n        props: element.props,\r\n        dom: oldFiber.dom,\r\n        parent: wipFiber,\r\n        base: oldFiber,\r\n        effectTag: \"UPDATE\",\r\n      }\r\n    }\r\n\r\n    if (!sameType && element) {\r\n      // 新增节点\r\n      newFiber = {\r\n        type: element.type,\r\n        props: element.props,\r\n        dom: null,\r\n        parent: wipFiber,\r\n        base: null,\r\n        effectTag: \"PLACEMENT\",\r\n      }\r\n    }\r\n    if (!sameType && oldFiber) {\r\n      // 删除\r\n      oldFiber.effectTag = \"DELETION\"\r\n      deletions.push(oldFiber)\r\n    }\r\n\r\n    if (oldFiber) {\r\n      oldFiber = oldFiber.sibling\r\n    }\r\n    if (index === 0) {\r\n      // 第一个元素，是父 fiber 的 child 属性\r\n      wipFiber.child = newFiber\r\n    } else {\r\n      // 其他元素是兄弟元素\r\n      preSibling.sibling = newFiber\r\n    }\r\n    preSibling = newFiber\r\n    index++\r\n    // fiber 基本结构构建完毕\r\n  }\r\n}\r\n\r\n\r\nexport default {\r\n  createElement,\r\n  render,\r\n  useState,\r\n  useEffect,\r\n  startTranstion: schedule,\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from './yolkjs'\r\n\r\n// 定义一个快速排序函数\r\nfunction quickSort(arr) {\r\n    // 如果数组长度小于等于1，直接返回数组\r\n    if (arr.length <= 1) {\r\n        return arr;\r\n    }\r\n    // 选择第一个元素作为基准元素\r\n    let pivot = arr[0];\r\n    // 定义两个空数组，用来存放比基准元素小和大的元素\r\n    let leftArr = [];\r\n    let rightArr = [];\r\n    // 从第二个元素开始遍历数组\r\n    for (let i = 1; i < arr.length; i++) {\r\n        // 如果当前元素小于基准元素，就放到左边的数组中\r\n        if (arr[i] < pivot) {\r\n            leftArr.push(arr[i]);\r\n        } else {\r\n            // 否则，就放到右边的数组中\r\n            rightArr.push(arr[i]);\r\n        }\r\n    }\r\n    // 返回左边数组、基准元素和右边数组拼接后的结果\r\n    return [...quickSort(leftArr), pivot, ...quickSort(rightArr)];\r\n}\r\n\r\n// 定义一个数组洗牌函数\r\nfunction shuffle(arr) {\r\n    // 获取数组的长度\r\n    let len = arr.length;\r\n    // 从最后一个元素开始遍历数组\r\n    for (let i = len - 1; i > 0; i--) {\r\n        // 随机生成一个[0, i]之间的整数作为索引\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        // 交换arr[i]和arr[j]的位置\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    // 返回打乱后的数组\r\n    return arr;\r\n}\r\n\r\n\r\nfunction many() {\r\n    let arr = []\r\n    for (let i = 0; i < 1000000; i++) {\r\n        arr.push(i)\r\n    }\r\n    shuffle(arr)\r\n    quickSort(arr)\r\n}\r\n\r\nlet index = 0\r\n\r\nexport function App(props) {\r\n    if (index !== 0) {\r\n        many()\r\n    }\r\n    index++\r\n    const [count, setCount] = React.useState(1)\r\n    console.warn(\"[count]\", count)\r\n    const [demo, setDemo] = React.useState('hello')\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"[useEffect]\", count)\r\n        console.log(document.querySelector(\".count-dom\").innerHTML)\r\n    }, [count])\r\n\r\n    const addTwice = () => {\r\n        const c1 = Math.random() * 10 + count\r\n        console.warn(\"[c1]\", c1)\r\n        setCount(c1)\r\n        Promise.resolve().then(() => {\r\n            const c2 = Math.random() * 10 + count\r\n            console.warn(\"[c2]\", c2)\r\n            // debugger\r\n            setCount(c2)\r\n            setTimeout(() => {\r\n                const c3 = Math.random() * 10 + count\r\n                console.warn(\"[c3]\", c3)\r\n                // debugger\r\n                setCount(c3)\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div id=\"app\">\r\n            <h1>hello, {props.title}</h1>\r\n            <p className='count-dom'>react dom {count}</p>\r\n            <p>react demo {demo}</p>\r\n            <a href=\"https://jd.com\">shop</a>\r\n            <button onClick={() => addTwice()}>add</button>\r\n            <button onClick={() => setDemo(demo + Math.random() * 10)}>change</button>\r\n        </div>\r\n    )\r\n}\r\n","// import React from 'react'\r\n// import ReactDOM from 'react-dom'\r\n\r\nimport React from './yolkjs'\r\n// import { App } from './ConcurrentMode'\r\nimport { App } from './demo'\r\n\r\nconst ReactDOM = React\r\n\r\nlet element = <App title=\"yolkjs\" />\r\n\r\nReactDOM.render(element, document.getElementById('root'))\r\n"],"sourceRoot":""}