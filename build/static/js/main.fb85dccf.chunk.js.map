{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","yolkjs/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","index.js","demo1.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","updateDom","dom","preProps","nextProps","name","slice","eventName","toLowerCase","removeEventListener","addEventListener","queue","schedule","task","queueMicrotask","wookLoopSync","pop","performWork","reconcile","WIP","wipRoot","performUnitOfWork","deletions","commitWorker","child","effects","wipFiber","effect","currentRoot","effectIndex","commitRoot","update","fiber","domParentFiber","parent","domParent","effectTag","appendChild","commitDeletion","removeChild","base","props","sibling","type","Function","hookIndex","hooks","children","reconcileChildren","updateFunctionComponent","vdom","document","createTextNode","createElement","createDom","elements","updateHostComponent","nextFiber","oldInputs","index","oldFiber","preSibling","allElement","n","element","newFiber","sameType","__source","map","nodeValue","render","container","useState","init","hook","oldHook","state","action","shift","scheduleWork","useEffect","inputs","current","create","hasChanged","Error","some","processEffect","startTranstion","_slicedToArray","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","ReactDOM","React","count","setCount","console","warn","demo","setDemo","log","querySelector","innerHTML","id","title","className","href","onClick","c1","Math","random","c2","getElementById"],"mappings":"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","file":"static/js/main.fb85dccf.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// 没有lean 无法实现并发更新\r\n// 现在这版实现的是完全的微任务更新\r\n// Legacy 模式。如果是在 event、setTimeout、network request 的 callback 中触发更新，那么协调时会启动 workLoopSync。\r\n// workLoopSync 开始工作以后，要等到 stack 中收集的所有 fiber node 都处理完毕以后，才会结束工作，也就是 fiber tree 的协调过程不可中断。\r\n\r\n/**\r\n * 创建虚拟dom的方法\r\n * @param {string} type 元素类型\r\n * @param {any} props jsx传递的属性\r\n * @param  {...any} children 子元素 \r\n */\r\nfunction createElement(type, props, ...children) {\r\n  // console.warn(children);\r\n  if (props) {\r\n    delete props.__source;\r\n  }\r\n  return {\r\n    type,\r\n    props: {\r\n      ...props,\r\n      children: children.map(child =>\r\n        typeof child === 'object' ? child : createTextElement(child)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction createTextElement(text) {\r\n  return {\r\n    type: 'TEXT',\r\n    props: {\r\n      nodeValue: text,\r\n      children: [],\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 通过虚拟 dom 新建 dom 元素\r\n * @param {*} vdom 虚拟 dom\r\n */\r\nfunction createDom(vdom) {\r\n  const dom = vdom.type === \"TEXT\"\r\n    ? document.createTextNode(\"\")\r\n    : document.createElement(vdom.type)\r\n  updateDom(dom, {}, vdom.props)\r\n  // Object.keys(vdom.props).forEach(name => {\r\n  //   if (name !== \"children\") {\r\n  //     // @todo: 属性判断，事件处理\r\n  //     dom[name] = vdom.props[name]\r\n  //   }\r\n  // })\r\n  return dom\r\n}\r\n\r\nfunction updateDom(dom, preProps, nextProps) {\r\n  /**\r\n   * 1. 规避 children 属性\r\n   * 2. 老得存在，取消\r\n   * 3. 新的存在，新增， \r\n   */\r\n\r\n  //  @todo 兼容性问题  \r\n\r\n  const filterPreProps = name => {\r\n    if (name.slice(0, 2) !== 'on') {\r\n      return false\r\n    }\r\n    if (!(name in nextProps)) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  \r\n  Object.keys(preProps)\r\n    .filter(name => name !== 'children')\r\n    .filter(filterPreProps)\r\n    .forEach(name => {\r\n      if (name.slice(0, 2) === 'on') {\r\n        // onclick => chick\r\n        const eventName = `${name.slice(2).toLowerCase()}__invoker`\r\n        if (dom[eventName]) {\r\n          dom.removeEventListener(name.slice(2).toLowerCase(), dom[eventName], false)\r\n        }\r\n      } else {\r\n        dom[name] = ''\r\n      }\r\n    })\r\n\r\n  Object.keys(nextProps)\r\n    .filter(name => name !== 'children')\r\n    .forEach(name => {\r\n      if (name.slice(0, 2) === 'on') {\r\n        // onclick => chick\r\n        const eventName = `${name.slice(2).toLowerCase()}__invoker`\r\n        dom[eventName] = () => {\r\n          nextProps[name]()\r\n        }\r\n        dom.addEventListener(name.slice(2).toLowerCase(), dom[eventName], false)\r\n      } else {\r\n        dom[name] = nextProps[name]\r\n      }\r\n    })\r\n}\r\n\r\nconst queue = []\r\n\r\nconst schedule = (task) => {\r\n  debugger\r\n  queue.push(task)\r\n  flush()\r\n}\r\n\r\nfunction flush() {\r\n  queueMicrotask(wookLoopSync)\r\n}\r\n\r\nfunction wookLoopSync() {\r\n  performWork()\r\n}\r\n\r\nfunction performWork() {\r\n  let task;\r\n  // task 执行可以返回下一个 loop\r\n  while ((task = queue.pop())) {\r\n    task();\r\n  }\r\n}\r\n\r\nconst reconcile = (WIP) => {\r\n  debugger\r\n  const wipRoot = WIP\r\n  // workLoop(WIP)\r\n  // nextUnitOfWork = WIP\r\n  // 有下一个任务，且当前帧还没有结束\r\n  while (WIP) { // 方便调试 去掉判断当前帧是否没有结束\r\n    WIP = performUnitOfWork(WIP)\r\n  }\r\n  debugger\r\n  // TODO\r\n  // if (WIP) return reconcile.bind(null, WIP)\r\n  if (!WIP) {\r\n    // 没有任务了，并且根节点还在\r\n    commitRoot(wipRoot)\r\n  }\r\n}\r\n\r\nconst update = (fiber) => {\r\n  if (fiber) {\r\n    // fiber.lane = LANE.UPDATE | LANE.DIRTY\r\n    schedule(() => {\r\n      wipFiber = fiber\r\n      return reconcile(fiber)\r\n    })\r\n  }\r\n}\r\n\r\nfunction render(vdom, container) {\r\n  let wipRoot = {\r\n    dom: container,\r\n    props: {\r\n      children: [vdom],\r\n    },\r\n    base: currentRoot, // 分身\r\n  }\r\n  deletions = []\r\n\r\n  update(wipRoot)\r\n}\r\n\r\nfunction scheduleWork(wipRoot) {\r\n  deletions = []\r\n  // postTask() //开始干活\r\n  update(wipRoot)\r\n}\r\n\r\nfunction commitEffects (effects) {\r\n  Object.keys(effects).forEach(key => {\r\n    let effect = effects[key]\r\n    effect()\r\n  })\r\n}\r\n\r\nfunction commitRoot(wipRoot) {\r\n  deletions.forEach(commitWorker)\r\n  commitWorker(wipRoot.child)\r\n\r\n  commitEffects(wipFiber.effects)\r\n\r\n  wipFiber.effects = []\r\n  currentRoot = wipRoot\r\n  effectIndex = 0\r\n}\r\n\r\nfunction commitWorker(fiber) {\r\n  if (!fiber) {\r\n    return\r\n  }\r\n  // const domParent = fiber.parent.dom\r\n  // domParent.appendChild(fiber.dom)\r\n  let domParentFiber = fiber.parent\r\n  while (!domParentFiber.dom) {\r\n    domParentFiber = domParentFiber.parent\r\n  }\r\n  const domParent = domParentFiber.dom\r\n  if (fiber.effectTag === 'PLACEMENT' && fiber.dom !== null) {\r\n    domParent.appendChild(fiber.dom)\r\n  } else if (fiber.effectTag === 'DELETION') {\r\n    commitDeletion(fiber, domParent)\r\n    // domParent.removeChild(fiber.dom)\r\n  } else if (fiber.effectTag === 'UPDATE' && fiber.dom !== null) {\r\n    // 更新dom\r\n    updateDom(fiber.dom, fiber.base.props, fiber.props)\r\n  }\r\n  commitWorker(fiber.child)\r\n  commitWorker(fiber.sibling)\r\n}\r\n\r\nfunction commitDeletion(fiber, domParent) {\r\n  if (fiber.dom) {\r\n    domParent.removeChild(fiber.dom)\r\n  } else {\r\n    commitDeletion(fiber.child, domParent)\r\n  }\r\n}\r\n\r\n// 下一个单元任务\r\n// render 函数会初始化第一个任务\r\n// let nextUnitOfWork = null\r\nlet currentRoot = null\r\nlet deletions = null\r\n\r\nfunction performUnitOfWork(fiber) {\r\n  const isFunctionComponent = fiber.type instanceof Function\r\n  // console.log('iisFunctionComponents', isFunctionComponent, fiber.type, fiber)\r\n  if (isFunctionComponent) {\r\n    updateFunctionComponent(fiber)\r\n  } else {\r\n    // dom\r\n    updateHostComponent(fiber)\r\n  }\r\n  // 找下一个任务\r\n  // 先找子元素\r\n  if (fiber.child) {\r\n    return fiber.child\r\n  }\r\n  let nextFiber = fiber\r\n  // 没有子元素，就找兄弟元素\r\n  while (nextFiber) {\r\n    if (nextFiber.sibling) {\r\n      return nextFiber.sibling\r\n    }\r\n    // 没有兄弟元素，找父元素\r\n    nextFiber = nextFiber.parent\r\n  }\r\n}\r\n\r\nlet wipFiber = null\r\nlet hookIndex = null\r\nlet effectIndex = 0\r\nfunction useState(init) {\r\n  const oldHook = wipFiber.base && wipFiber.base.hooks[hookIndex]\r\n  let hook\r\n  if (oldHook) {\r\n    hook = oldHook\r\n  } else {\r\n    hook = {\r\n      state: oldHook ? oldHook.state : init,\r\n      queue: []\r\n    }\r\n  }\r\n  const actions = oldHook ? oldHook.queue : []\r\n  actions.forEach(action => {\r\n    hook.state = action\r\n  })\r\n  hook.queue.shift()\r\n  const setState = action => {\r\n    // hook.queue.length = 0\r\n    hook.queue.push(action)\r\n    let wipRoot = {\r\n      dom: currentRoot.dom,\r\n      props: currentRoot.props,\r\n      base: currentRoot,\r\n    }\r\n    deletions = []\r\n    scheduleWork(wipRoot)\r\n  }\r\n  wipFiber.hooks.push(hook)\r\n  hookIndex++\r\n  return [hook.state, setState]\r\n}\r\n\r\nlet oldInputs = []\r\nfunction processEffect (create, inputs, oldFiber) {\r\n  return function () {\r\n    const current = wipFiber\r\n    if (current) {\r\n      let hasChanged\r\n      if (inputs) {\r\n        if (Array.isArray(inputs)) {\r\n          if (inputs.length) {\r\n            hasChanged = oldInputs.some((value, i) => inputs[i] !== value)\r\n          }\r\n          if (!oldFiber) {\r\n            hasChanged = true\r\n          }\r\n        } else {\r\n          throw new Error(\"the dep must be a Array\")\r\n        }\r\n      } else {\r\n        hasChanged = true\r\n      }\r\n      if (hasChanged) {\r\n        create()\r\n      }\r\n      oldInputs = inputs\r\n    }\r\n  }\r\n}\r\n\r\nfunction useEffect(effect, inputs) {\r\n  const current = wipFiber\r\n  // const cursor = hookIndex\r\n  if (current) {\r\n    let key = '$' + effectIndex\r\n    const oldFiber = wipFiber.base\r\n    current.effects[key] = processEffect(effect, inputs, oldFiber)\r\n    effectIndex++\r\n  }\r\n}\r\n\r\nfunction updateFunctionComponent(fiber) {\r\n  wipFiber = fiber\r\n  hookIndex = 0\r\n  wipFiber.hooks = []\r\n  wipFiber.effects = wipFiber.base ? wipFiber.base.effects : []\r\n  const children = [fiber.type(fiber.props)]\r\n  reconcileChildren(fiber, children)\r\n}\r\n\r\nfunction updateHostComponent(fiber) {\r\n  // 获取下一个任务\r\n  // 根据当前任务获取下一个任务\r\n  if (!fiber.dom) {\r\n    // 不是入口\r\n    fiber.dom = createDom(fiber)\r\n  }\r\n\r\n  // // 真实的 dom 操作\r\n  // if (fiber.parent) {\r\n  //   fiber.parent.dom.appendChild(fiber.dom)\r\n  // }\r\n\r\n  const elements = fiber.props.children\r\n\r\n  reconcileChildren(fiber, elements)\r\n\r\n}\r\n\r\nfunction reconcileChildren(wipFiber, elements) {\r\n  // 构建成 fiber\r\n  let index = 0\r\n  let oldFiber = wipFiber.base && wipFiber.base.child\r\n  let preSibling = null\r\n  const allElement = []\r\n  for (let n of elements) {\r\n    if (Array.isArray(n)) {\r\n      allElement.push(...n)\r\n    } else {\r\n      allElement.push(n)\r\n    }\r\n  }\r\n  while (index < allElement.length) {\r\n    // while (index < elements.length) {\r\n    let element = allElement[index]\r\n    let newFiber = null\r\n    // 对比 oldfiber 的状态和当前 element\r\n    // 先比较类型，\r\n    const sameType = oldFiber && element && oldFiber.type === element.type\r\n    if (sameType) {\r\n      // 复用节点，更新\r\n      newFiber = {\r\n        type: oldFiber.type,\r\n        props: element.props,\r\n        dom: oldFiber.dom,\r\n        parent: wipFiber,\r\n        base: oldFiber,\r\n        effectTag: \"UPDATE\",\r\n      }\r\n    }\r\n\r\n    if (!sameType && element) {\r\n      // 新增节点\r\n      newFiber = {\r\n        type: element.type,\r\n        props: element.props,\r\n        dom: null,\r\n        parent: wipFiber,\r\n        base: null,\r\n        effectTag: \"PLACEMENT\",\r\n      }\r\n    }\r\n    if (!sameType && oldFiber) {\r\n      // 删除\r\n      oldFiber.effectTag = \"DELETION\"\r\n      deletions.push(oldFiber)\r\n    }\r\n\r\n    if (oldFiber) {\r\n      oldFiber = oldFiber.sibling\r\n    }\r\n    if (index === 0) {\r\n      // 第一个元素，是父 fiber 的 child 属性\r\n      wipFiber.child = newFiber\r\n    } else {\r\n      // 其他元素是兄弟元素\r\n      preSibling.sibling = newFiber\r\n    }\r\n    preSibling = newFiber\r\n    index++\r\n    // fiber 基本结构构建完毕\r\n  }\r\n}\r\n\r\n\r\nexport default {\r\n  createElement,\r\n  render,\r\n  useState,\r\n  useEffect,\r\n  startTranstion: schedule,\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// import React from 'react'\r\n// import ReactDOM from 'react-dom'\r\n\r\nimport React from './yolkjs'\r\n// import { App } from './ConcurrentMode'\r\n// import { App } from './demo'\r\nimport { App } from './demo1'\r\n\r\nconst ReactDOM = React\r\n\r\nlet element = <App title=\"yolkjs\" />\r\n\r\nReactDOM.render(element, document.getElementById('root'))\r\n","import React from './yolkjs'\r\n\r\nexport function App(props) {\r\n    const [count, setCount] = React.useState(1)\r\n    console.warn(\"[count]\", count)\r\n    const [demo, setDemo] = React.useState('hello')\r\n    console.warn(\"[demo]\", demo)\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"[useEffect]\", count)\r\n        console.log(document.querySelector(\".count-dom\").innerHTML)\r\n    }, [count])\r\n\r\n    const addTwice = () => {\r\n        const c1 = Math.random() * 10 + count\r\n        console.warn(\"[c1]\", c1)\r\n        setCount(c1)\r\n\r\n        const c2 = Math.random() * 10 + count\r\n        console.warn(\"[c2]\", c2)\r\n        setCount(c2)\r\n    }\r\n    const changeDemo = () => {\r\n        debugger;console.log(demo);setDemo(demo + Math.random() * 10)\r\n    }\r\n    return (\r\n        <div id=\"app\">\r\n            <h1>hello, {props.title}</h1>\r\n            <p className='count-dom'>react dom {count}</p>\r\n            <p>react demo {demo}</p>\r\n            <a href=\"https://jd.com\">shop</a>\r\n            <button onClick={addTwice}>add</button>\r\n            <button onClick={changeDemo}>change</button>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}